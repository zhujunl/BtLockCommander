package com.miaxis.btlockcommander.util.packet;

public class CRC8 {	
	static final byte crctable[] = {
		 (byte)0x00, (byte)0xD5, (byte)0x7F, (byte)0xAA, (byte)0xFE, (byte)0x2B, (byte)0x81, (byte)0x54,
		 (byte)0x29, (byte)0xFC, (byte)0x56, (byte)0x83, (byte)0xD7, (byte)0x02, (byte)0xA8, (byte)0x7D,
		 (byte)0x52, (byte)0x87, (byte)0x2D, (byte)0xF8, (byte)0xAC, (byte)0x79, (byte)0xD3, (byte)0x06,
		 0x7B, (byte)0xAE, 0x04, (byte)0xD1, (byte)0x85, (byte)0x50, (byte)0xFA, (byte)0x2F,
		 (byte)0xA4, 0x71, (byte)0xDB, 0x0E, 0x5A, (byte)0x8F, 0x25, (byte)0xF0,
		 (byte)0x8D, 0x58, (byte)0xF2, 0x27, 0x73, (byte)0xA6, 0x0C, (byte)0xD9,
		 (byte)0xF6, 0x23, (byte)0x89, 0x5C, 0x08, (byte)0xDD, 0x77, (byte)0xA2,
		 (byte)0xDF, 0x0A, (byte)0xA0, 0x75, 0x21, (byte)0xF4, 0x5E, (byte)0x8B,
		 (byte)0x9D, 0x48, (byte)0xE2, 0x37, 0x63, (byte)0xB6, 0x1C, (byte)0xC9,
		 (byte)0xB4, 0x61, (byte)0xCB, 0x1E, 0x4A, (byte)0x9F, 0x35, (byte)0xE0,
		 (byte)0xCF, 0x1A, (byte)0xB0, 0x65, 0x31, (byte)0xE4, 0x4E, (byte)0x9B,
		 (byte)0xE6, 0x33, (byte)0x99, 0x4C, 0x18, (byte)0xCD, 0x67, (byte)0xB2,
		 0x39, (byte)0xEC, 0x46, (byte)0x93, (byte)0xC7, 0x12, (byte)0xB8, 0x6D,
		 0x10, (byte)0xC5, 0x6F, (byte)0xBA, (byte)0xEE, 0x3B, (byte)0x91, 0x44,
		 0x6B, (byte)0xBE, 0x14, (byte)0xC1, (byte)0x95, 0x40, (byte)0xEA, 0x3F,
		 0x42, (byte)0x97, 0x3D, (byte)0xE8, (byte)0xBC, 0x69, (byte)0xC3, 0x16,
		 (byte)0xEF, 0x3A, (byte)0x90, 0x45, 0x11, (byte)0xC4, 0x6E, (byte)0xBB,
		 (byte)0xC6, 0x13, (byte)0xB9, 0x6C, 0x38, (byte)0xED, 0x47, (byte)0x92,
		 (byte)0xBD, 0x68, (byte)0xC2, 0x17, 0x43, (byte)0x96, 0x3C, (byte)0xE9,
		 (byte)0x94, 0x41, (byte)0xEB, 0x3E, 0x6A, (byte)0xBF, 0x15, (byte)0xC0,
		  0x4B, (byte)0x9E, 0x34, (byte)0xE1, (byte)0xB5, 0x60, (byte)0xCA, 0x1F,
		  0x62, (byte)0xB7, 0x1D, (byte)0xC8, (byte)0x9C, 0x49, (byte)0xE3, 0x36,
		  0x19, (byte)0xCC, 0x66, (byte)0xB3, (byte)0xE7, 0x32, (byte)0x98, 0x4D,
		  0x30, (byte)0xE5, 0x4F, (byte)0x9A, (byte)0xCE, 0x1B, (byte)0xB1, 0x64,
		  0x72, (byte)0xA7, 0x0D, (byte)0xD8, (byte)0x8C, 0x59, (byte)0xF3, 0x26,
		  0x5B, (byte)0x8E, 0x24, (byte)0xF1, (byte)0xA5, 0x70, (byte)0xDA, 0x0F,
		  0x20, (byte)0xF5, 0x5F, (byte)0x8A, (byte)0xDE, 0x0B, (byte)0xA1, 0x74,
		  0x09, (byte)0xDC, 0x76, (byte)0xA3, (byte)0xF7, 0x22, (byte)0x88, 0x5D,
		  (byte)0xD6, 0x03, (byte)0xA9, 0x7C, 0x28, (byte)0xFD, 0x57, (byte)0x82,
		  (byte)0xFF, 0x2A, (byte)0x80, 0x55, 0x01, (byte)0xD4, 0x7E, (byte)0xAB,
		  (byte)0x84, 0x51, (byte)0xFB, 0x2E, 0x7A, (byte)0xAF, 0x05, (byte)0xD0,
		  (byte)0xAD, 0x78, (byte)0xD2, 0x07, 0x53, (byte)0x86, 0x2C, (byte)0xF9
	};
	
	private static void initChecksum( byte[] crcvalue ){
		crcvalue[0] = 0;
	}

	private static void updateChecksum(byte[] crcvalue, byte[] data, int length ){
		byte crc;
		int m;

		crc = crcvalue[0];
		m = 0;
		while( (length--) != 0 )
		{
			crc = crctable[(crc&0xff) ^ ((data[m])&0xff)];
			m++;
		}
		crcvalue[0] = crc;
	}	

	private static void finishChecksum( byte[] crcvalue ){
	  byte crcvalueT;
	  crcvalueT = crcvalue[0];
	  crcvalueT ^= 0;
	  crcvalue[0] = crcvalueT;
	}
	
	public static byte blockChecksum( byte[] data, int length ){
	  byte[] crc = new byte[1];
	  initChecksum( crc );
	  updateChecksum( crc, data, length );
	  finishChecksum( crc );
	  return crc[0];
	}
}